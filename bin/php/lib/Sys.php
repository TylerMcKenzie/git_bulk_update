<?php
/**
 * Generated by Haxe 3.4.7
 */

use \php\Boot;
use \php\_Boot\HxString;

class Sys {
	/**
	 * @var string
	 */
	static public $_programPath;


	/**
	 * @return \Array_hx
	 */
	static public function args () {
		#/usr/share/haxe/std/php7/_std/Sys.hx:39: lines 39-43
		if (array_key_exists("argv", $_SERVER)) {
			#/usr/share/haxe/std/php7/_std/Sys.hx:40: characters 3-88
			return \Array_hx::wrap(array_slice($_SERVER["argv"], 1));
		} else {
			#/usr/share/haxe/std/php7/_std/Sys.hx:42: characters 3-12
			return new \Array_hx();
		}
	}


	/**
	 * @param mixed $v
	 * 
	 * @return void
	 */
	static public function println ($v) {
		#/usr/share/haxe/std/php7/_std/Sys.hx:34: characters 2-10
		echo(\Std::string($v));
		#/usr/share/haxe/std/php7/_std/Sys.hx:35: characters 2-13
		echo("\x0A");
	}


	/**
	 * @return string
	 */
	static public function programPath () {
		#/usr/share/haxe/std/php7/_std/Sys.hx:116: characters 2-21
		return Sys::$_programPath;
	}


	/**
	 * @return string
	 */
	static public function systemName () {
		#/usr/share/haxe/std/php7/_std/Sys.hx:75: characters 2-32
		$s = php_uname("s");
		#/usr/share/haxe/std/php7/_std/Sys.hx:76: characters 2-25
		$p = HxString::indexOf($s, " ");
		#/usr/share/haxe/std/php7/_std/Sys.hx:77: characters 9-38
		if ($p >= 0) {
			#/usr/share/haxe/std/php7/_std/Sys.hx:77: characters 19-33
			return HxString::substr($s, 0, $p);
		} else {
			#/usr/share/haxe/std/php7/_std/Sys.hx:77: characters 36-37
			return $s;
		}
	}


	/**
	 * @internal
	 * @access private
	 */
	static public function __hx__init ()
	{
		static $called = false;
		if ($called) return;
		$called = true;


self::$_programPath = (realpath($_SERVER["SCRIPT_FILENAME"]) ?: null);
	}
}


Boot::registerClass(Sys::class, 'Sys');
Sys::__hx__init();
