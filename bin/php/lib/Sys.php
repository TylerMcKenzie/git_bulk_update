<?php
/**
 * Generated by Haxe 3.4.7
 */

use \php\_Boot\HxClosure;
use \php\Boot;
use \php\_Boot\HxString;

class Sys {
	/**
	 * @var string
	 */
	static public $_programPath;


	/**
	 * @return \Array_hx
	 */
	static public function args () {
		#/usr/share/haxe/std/php7/_std/Sys.hx:39: lines 39-43
		if (array_key_exists("argv", $_SERVER)) {
			#/usr/share/haxe/std/php7/_std/Sys.hx:40: characters 3-88
			return \Array_hx::wrap(array_slice($_SERVER["argv"], 1));
		} else {
			#/usr/share/haxe/std/php7/_std/Sys.hx:42: characters 3-12
			return new \Array_hx();
		}
	}


	/**
	 * @param string $cmd
	 * @param \Array_hx $args
	 * 
	 * @return int
	 */
	static public function command ($cmd, $args = null) {
		#/usr/share/haxe/std/php7/_std/Sys.hx:81: lines 81-91
		if ($args !== null) {
			#/usr/share/haxe/std/php7/_std/Sys.hx:82: characters 11-23
			$_g = Sys::systemName();
			#/usr/share/haxe/std/php7/_std/Sys.hx:82: characters 11-23
			if ($_g === "Windows") {
				#/usr/share/haxe/std/php7/_std/Sys.hx:84: lines 84-87
				$_g1 = new \Array_hx();
				#/usr/share/haxe/std/php7/_std/Sys.hx:85: lines 85-86
				$_g11 = 0;
				#/usr/share/haxe/std/php7/_std/Sys.hx:85: lines 85-86
				$_g2 = (\Array_hx::wrap([\StringTools::replace($cmd, "/", "\\")]))->concat($args);
				#/usr/share/haxe/std/php7/_std/Sys.hx:85: lines 85-86
				while ($_g11 < $_g2->length) {
					#/usr/share/haxe/std/php7/_std/Sys.hx:85: characters 11-12
					$a = ($_g2->arr[$_g11] ?? null);
					#/usr/share/haxe/std/php7/_std/Sys.hx:85: lines 85-86
					$_g11 = $_g11 + 1;
					#/usr/share/haxe/std/php7/_std/Sys.hx:86: characters 6-38
					$x = \StringTools::quoteWinArg($a, true);
					#/usr/share/haxe/std/php7/_std/Sys.hx:86: characters 6-38
					$_g1->arr[$_g1->length] = $x;
					#/usr/share/haxe/std/php7/_std/Sys.hx:86: characters 6-38
					++$_g1->length;

				}

				#/usr/share/haxe/std/php7/_std/Sys.hx:84: lines 84-87
				$cmd = $_g1->join(" ");
			} else {
				#/usr/share/haxe/std/php7/_std/Sys.hx:89: characters 11-59
				$_this = (\Array_hx::wrap([$cmd]))->concat($args);
				#/usr/share/haxe/std/php7/_std/Sys.hx:89: characters 11-59
				$f = new HxClosure(\StringTools::class, 'quoteUnixArg');
				#/usr/share/haxe/std/php7/_std/Sys.hx:89: characters 11-59
				$result = [];
				#/usr/share/haxe/std/php7/_std/Sys.hx:89: characters 11-59
				$_g12 = 0;
				#/usr/share/haxe/std/php7/_std/Sys.hx:89: characters 11-59
				$_g3 = $_this->length;
				#/usr/share/haxe/std/php7/_std/Sys.hx:89: characters 11-59
				while ($_g12 < $_g3) {
					#/usr/share/haxe/std/php7/_std/Sys.hx:89: characters 11-59
					$_g12 = $_g12 + 1;
					#/usr/share/haxe/std/php7/_std/Sys.hx:89: characters 11-59
					$i = $_g12 - 1;
					#/usr/share/haxe/std/php7/_std/Sys.hx:89: characters 11-59
					$result[$i] = $f($_this->arr[$i]);
				}

				#/usr/share/haxe/std/php7/_std/Sys.hx:89: characters 5-69
				$cmd = \Array_hx::wrap($result)->join(" ");
			}
		}
		#/usr/share/haxe/std/php7/_std/Sys.hx:92: characters 2-29
		$result1 = Boot::deref(0);
		#/usr/share/haxe/std/php7/_std/Sys.hx:93: characters 2-28
		system($cmd, $result1);
		#/usr/share/haxe/std/php7/_std/Sys.hx:94: characters 2-15
		return $result1;
	}


	/**
	 * @param mixed $v
	 * 
	 * @return void
	 */
	static public function println ($v) {
		#/usr/share/haxe/std/php7/_std/Sys.hx:34: characters 2-10
		echo(\Std::string($v));
		#/usr/share/haxe/std/php7/_std/Sys.hx:35: characters 2-13
		echo("\x0A");
	}


	/**
	 * @return string
	 */
	static public function programPath () {
		#/usr/share/haxe/std/php7/_std/Sys.hx:116: characters 2-21
		return Sys::$_programPath;
	}


	/**
	 * @return string
	 */
	static public function systemName () {
		#/usr/share/haxe/std/php7/_std/Sys.hx:75: characters 2-32
		$s = php_uname("s");
		#/usr/share/haxe/std/php7/_std/Sys.hx:76: characters 2-25
		$p = HxString::indexOf($s, " ");
		#/usr/share/haxe/std/php7/_std/Sys.hx:77: characters 9-38
		if ($p >= 0) {
			#/usr/share/haxe/std/php7/_std/Sys.hx:77: characters 19-33
			return HxString::substr($s, 0, $p);
		} else {
			#/usr/share/haxe/std/php7/_std/Sys.hx:77: characters 36-37
			return $s;
		}
	}


	/**
	 * @internal
	 * @access private
	 */
	static public function __hx__init ()
	{
		static $called = false;
		if ($called) return;
		$called = true;


self::$_programPath = (realpath($_SERVER["SCRIPT_FILENAME"]) ?: null);
	}
}


Boot::registerClass(Sys::class, 'Sys');
Sys::__hx__init();
