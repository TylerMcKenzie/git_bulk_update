<?php
/**
 * Generated by Haxe 3.4.7
 */

namespace tink\cli\prompt;

use \tink\cli\PromptTypeBase;
use \tink\core\_Promise\Promise_Impl_;
use \php\_Boot\HxClosure;
use \tink\core\Outcome;
use \php\Boot;
use \tink\io\_Worker\Worker_Impl_;
use \tink\io\WorkerObject;
use \tink\core\TypedError;
use \tink\core\_Future\FutureObject;
use \php\_Boot\HxString;
use \tink\cli\Prompt;
use \tink\core\Noise;
use \tink\core\_Lazy\LazyFunc;
use \php\_Boot\HxAnon;

class SysPrompt implements Prompt {
	/**
	 * @var WorkerObject
	 */
	public $worker;


	/**
	 * @param WorkerObject $worker
	 * 
	 * @return void
	 */
	public function __construct ($worker = null) {
		#/home/vagrant/haxelib/tink_cli/0,4,1/src/tink/cli/prompt/SysPrompt.hx:14: characters 2-31
		$this->worker = Worker_Impl_::ensure($worker);
	}


	/**
	 * @param string $v
	 * 
	 * @return FutureObject
	 */
	public function print ($v) {
		#/home/vagrant/haxelib/tink_cli/0,4,1/src/tink/cli/prompt/SysPrompt.hx:18: lines 18-21
		return Worker_Impl_::work($this->worker, new LazyFunc(function ()  use (&$v) {
			#/home/vagrant/haxelib/tink_cli/0,4,1/src/tink/cli/prompt/SysPrompt.hx:19: characters 3-15
			echo(\Std::string($v));
			#/home/vagrant/haxelib/tink_cli/0,4,1/src/tink/cli/prompt/SysPrompt.hx:20: characters 3-24
			return Outcome::Success(Noise::Noise());
		}));
	}


	/**
	 * @param string $v
	 * 
	 * @return FutureObject
	 */
	public function println ($v) {
		#/home/vagrant/haxelib/tink_cli/0,4,1/src/tink/cli/prompt/SysPrompt.hx:25: lines 25-28
		return Worker_Impl_::work($this->worker, new LazyFunc(function ()  use (&$v) {
			#/home/vagrant/haxelib/tink_cli/0,4,1/src/tink/cli/prompt/SysPrompt.hx:26: characters 3-17
			\Sys::println($v);
			#/home/vagrant/haxelib/tink_cli/0,4,1/src/tink/cli/prompt/SysPrompt.hx:27: characters 3-24
			return Outcome::Success(Noise::Noise());
		}));
	}


	/**
	 * @param PromptTypeBase $type
	 * 
	 * @return FutureObject
	 */
	public function prompt ($type) {
		#/home/vagrant/haxelib/tink_cli/0,4,1/src/tink/cli/prompt/SysPrompt.hx:32: lines 32-62
		return Promise_Impl_::ofSpecific(Worker_Impl_::work($this->worker, new LazyFunc(function ()  use (&$type) {
			#/home/vagrant/haxelib/tink_cli/0,4,1/src/tink/cli/prompt/SysPrompt.hx:33: lines 33-61
			switch (Boot::dynamicField($type, 'index')) {
				case 0:
					#/home/vagrant/haxelib/tink_cli/0,4,1/src/tink/cli/prompt/SysPrompt.hx:34: characters 16-17
					$v = $type->params[0];
					#/home/vagrant/haxelib/tink_cli/0,4,1/src/tink/cli/prompt/SysPrompt.hx:35: characters 5-22
					echo(\Std::string("" . ($v??'null') . ": "));
					#/home/vagrant/haxelib/tink_cli/0,4,1/src/tink/cli/prompt/SysPrompt.hx:36: characters 5-36
					return Outcome::Success(\Sys::stdin()->readLine());
					break;
				case 1:
					#/home/vagrant/haxelib/tink_cli/0,4,1/src/tink/cli/prompt/SysPrompt.hx:58: characters 28-29
					$c = $type->params[1];
					#/home/vagrant/haxelib/tink_cli/0,4,1/src/tink/cli/prompt/SysPrompt.hx:58: characters 25-26
					$v1 = $type->params[0];
					#/home/vagrant/haxelib/tink_cli/0,4,1/src/tink/cli/prompt/SysPrompt.hx:59: characters 5-39
					echo(\Std::string("" . ($v1??'null') . " [" . ($c->join("/")??'null') . "]: "));
					#/home/vagrant/haxelib/tink_cli/0,4,1/src/tink/cli/prompt/SysPrompt.hx:60: characters 5-36
					return Outcome::Success(\Sys::stdin()->readLine());
					break;
				case 2:
					#/home/vagrant/haxelib/tink_cli/0,4,1/src/tink/cli/prompt/SysPrompt.hx:38: characters 16-17
					$v2 = $type->params[0];
					#/home/vagrant/haxelib/tink_cli/0,4,1/src/tink/cli/prompt/SysPrompt.hx:39: characters 5-22
					echo(\Std::string("" . ($v2??'null') . ": "));
					#/home/vagrant/haxelib/tink_cli/0,4,1/src/tink/cli/prompt/SysPrompt.hx:40: characters 5-16
					$s = new \Array_hx();
					#/home/vagrant/haxelib/tink_cli/0,4,1/src/tink/cli/prompt/SysPrompt.hx:41: lines 41-55
					while (true) {
						#/home/vagrant/haxelib/tink_cli/0,4,1/src/tink/cli/prompt/SysPrompt.hx:41: characters 15-33
						$_g = \Sys::getChar(false);
						#/home/vagrant/haxelib/tink_cli/0,4,1/src/tink/cli/prompt/SysPrompt.hx:41: characters 15-33
						switch ($_g) {
							case 3:
							case 4:
								#/home/vagrant/haxelib/tink_cli/0,4,1/src/tink/cli/prompt/SysPrompt.hx:46: characters 7-22
								\Sys::println("");
								#/home/vagrant/haxelib/tink_cli/0,4,1/src/tink/cli/prompt/SysPrompt.hx:47: characters 7-18
								exit(1);
								break;
							case 10:
							case 13:
								#/home/vagrant/haxelib/tink_cli/0,4,1/src/tink/cli/prompt/SysPrompt.hx:43: characters 7-22
								\Sys::println("");
								#/home/vagrant/haxelib/tink_cli/0,4,1/src/tink/cli/prompt/SysPrompt.hx:44: characters 7-12
								break 2;
								break;
							case 127:
								#/home/vagrant/haxelib/tink_cli/0,4,1/src/tink/cli/prompt/SysPrompt.hx:49: characters 7-14
								if ($s->length > 0) {
									#/home/vagrant/haxelib/tink_cli/0,4,1/src/tink/cli/prompt/SysPrompt.hx:49: characters 7-14
									$s->length--;
								}
								#/home/vagrant/haxelib/tink_cli/0,4,1/src/tink/cli/prompt/SysPrompt.hx:49: characters 7-14
								array_pop($s->arr);
								break;
							default:
								#/home/vagrant/haxelib/tink_cli/0,4,1/src/tink/cli/prompt/SysPrompt.hx:50: characters 11-12
								$c1 = $_g;
								#/home/vagrant/haxelib/tink_cli/0,4,1/src/tink/cli/prompt/SysPrompt.hx:50: lines 50-54
								if ($c1 >= 32) {
									#/home/vagrant/haxelib/tink_cli/0,4,1/src/tink/cli/prompt/SysPrompt.hx:51: characters 7-16
									$s->arr[$s->length] = $c1;
									#/home/vagrant/haxelib/tink_cli/0,4,1/src/tink/cli/prompt/SysPrompt.hx:51: characters 7-16
									++$s->length;
								} else {
									#/home/vagrant/haxelib/tink_cli/0,4,1/src/tink/cli/prompt/SysPrompt.hx:52: characters 11-12
									$c2 = $_g;
									#/home/vagrant/haxelib/tink_cli/0,4,1/src/tink/cli/prompt/SysPrompt.hx:53: characters 7-22
									\Sys::println("");
									#/home/vagrant/haxelib/tink_cli/0,4,1/src/tink/cli/prompt/SysPrompt.hx:54: characters 7-51
									return Outcome::Failure(new TypedError(null, "Invalid char " . ($c2??'null'), new HxAnon([
										"fileName" => "SysPrompt.hx",
										"lineNumber" => 54,
										"className" => "tink.cli.prompt.SysPrompt",
										"methodName" => "prompt",
									])));
								}
								break;
						}
					}
					#/home/vagrant/haxelib/tink_cli/0,4,1/src/tink/cli/prompt/SysPrompt.hx:56: characters 13-39
					$f = new HxClosure(HxString::class, 'fromCharCode');
					#/home/vagrant/haxelib/tink_cli/0,4,1/src/tink/cli/prompt/SysPrompt.hx:56: characters 13-39
					$result = [];
					#/home/vagrant/haxelib/tink_cli/0,4,1/src/tink/cli/prompt/SysPrompt.hx:56: characters 13-39
					$_g1 = 0;
					#/home/vagrant/haxelib/tink_cli/0,4,1/src/tink/cli/prompt/SysPrompt.hx:56: characters 13-39
					$_g2 = $s->length;
					#/home/vagrant/haxelib/tink_cli/0,4,1/src/tink/cli/prompt/SysPrompt.hx:56: characters 13-39
					while ($_g1 < $_g2) {
						#/home/vagrant/haxelib/tink_cli/0,4,1/src/tink/cli/prompt/SysPrompt.hx:56: characters 13-39
						$_g1 = $_g1 + 1;
						#/home/vagrant/haxelib/tink_cli/0,4,1/src/tink/cli/prompt/SysPrompt.hx:56: characters 13-39
						$i = $_g1 - 1;
						#/home/vagrant/haxelib/tink_cli/0,4,1/src/tink/cli/prompt/SysPrompt.hx:56: characters 13-39
						$result[$i] = $f($s->arr[$i]);
					}

					#/home/vagrant/haxelib/tink_cli/0,4,1/src/tink/cli/prompt/SysPrompt.hx:56: characters 5-49
					return Outcome::Success(\Array_hx::wrap($result)->join(""));
					break;
			}
		})));
	}
}


Boot::registerClass(SysPrompt::class, 'tink.cli.prompt.SysPrompt');
