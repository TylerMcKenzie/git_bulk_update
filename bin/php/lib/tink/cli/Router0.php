<?php
/**
 * Generated by Haxe 3.4.7
 */

namespace tink\cli;

use \tink\core\_Promise\Promise_Impl_;
use \tink\core\Outcome;
use \php\Boot;
use \tink\core\TypedError;
use \tink\core\_Future\FutureObject;
use \tink\core\_Future\SyncFuture;
use \tink\core\_Future\Future_Impl_;
use \src\App;
use \tink\core\Noise;
use \php\_Boot\HxAnon;
use \tink\core\_Lazy\LazyConst;

class Router0 extends Router {
	/**
	 * @param App $command
	 * @param Prompt $prompt
	 * 
	 * @return void
	 */
	public function __construct ($command, $prompt) {
		#/home/vagrant/haxelib/tink_cli/0,4,1/src/tink/cli/Macro.hx:179: characters 4-53
		parent::__construct($command, $prompt, true);
	}


	/**
	 * @param \Array_hx $args
	 * 
	 * @return FutureObject
	 */
	public function process ($args) {
		#/home/vagrant/haxelib/tink_cli/0,4,1/src/tink/cli/Macro.hx:182: lines 182-184
		$_gthis = $this;
		#/home/vagrant/haxelib/tink_cli/0,4,1/src/tink/cli/Macro.hx:183: characters 27-34
		$_g = ($args->arr[0] ?? null);
		#/home/vagrant/haxelib/tink_cli/0,4,1/src/tink/cli/Macro.hx:374: lines 374-377
		$args1 = null;
		#/home/vagrant/haxelib/tink_cli/0,4,1/src/tink/cli/Macro.hx:374: characters 21-39
		$_g1 = $this->processArgs($args);
		#/home/vagrant/haxelib/tink_cli/0,4,1/src/tink/cli/Macro.hx:374: characters 21-39
		switch (Boot::dynamicField($_g1, 'index')) {
			case 0:
				#/home/vagrant/haxelib/tink_cli/0,4,1/src/tink/cli/Macro.hx:375: characters 17-21
				$args2 = $_g1->params[0];
				#/home/vagrant/haxelib/tink_cli/0,4,1/src/tink/cli/Macro.hx:374: lines 374-377
				$args1 = $args2;
				break;
			case 1:
				#/home/vagrant/haxelib/tink_cli/0,4,1/src/tink/cli/Macro.hx:376: characters 17-18
				$f = $_g1->params[0];
				#/home/vagrant/haxelib/tink_cli/0,4,1/src/tink/cli/Macro.hx:376: characters 21-29
				return Promise_Impl_::ofOutcome(Outcome::Failure($f));
				break;
		}
		#/home/vagrant/haxelib/tink_cli/0,4,1/src/tink/cli/Macro.hx:379: characters 20-73
		return Promise_Impl_::next($this->promptRequired(), function ($_)  use (&$args1, &$_gthis) {
			#/home/vagrant/haxelib/tink_cli/0,4,1/src/tink/cli/Macro.hx:379: characters 54-72
			return $_gthis->run_run($args1);
		});
	}


	/**
	 * @param \Array_hx $args
	 * @param int $index
	 * 
	 * @return int
	 */
	public function processFlag ($args, $index) {
		#/home/vagrant/haxelib/tink_cli/0,4,1/src/tink/cli/Macro.hx:187: characters 4-24
		$current = $index;
		#/home/vagrant/haxelib/tink_cli/0,4,1/src/tink/cli/Macro.hx:188: characters 20-31
		$_g = ($args->arr[$index] ?? null);
		#/home/vagrant/haxelib/tink_cli/0,4,1/src/tink/cli/Macro.hx:188: characters 20-31
		switch ($_g) {
			case "-b":
				#src/App.hx:27: characters 11-34
				$current = $current + 1;
				#src/App.hx:27: characters 11-34
				$this->command->branchname = ($args->arr[$current] ?? null);
				break;
			case "-d":
				#src/App.hx:15: characters 11-33
				$current = $current + 1;
				#src/App.hx:15: characters 11-33
				$this->command->directory = ($args->arr[$current] ?? null);
				break;
			case "-f":
				#src/App.hx:18: characters 11-37
				$current = $current + 1;
				#src/App.hx:18: characters 11-37
				$this->command->fileExtension = ($args->arr[$current] ?? null);
				break;
			case "-pr-message":
				#src/App.hx:30: characters 11-42
				$current = $current + 1;
				#src/App.hx:30: characters 11-42
				$this->command->pullRequestMessage = ($args->arr[$current] ?? null);
				break;
			case "-r":
				#src/App.hx:24: characters 11-31
				$current = $current + 1;
				#src/App.hx:24: characters 11-31
				$this->command->replace = ($args->arr[$current] ?? null);
				break;
			case "-s":
				#src/App.hx:21: characters 11-30
				$current = $current + 1;
				#src/App.hx:21: characters 11-30
				$this->command->search = ($args->arr[$current] ?? null);
				break;
			default:
				#/home/vagrant/haxelib/tink_cli/0,4,1/src/tink/cli/Macro.hx:188: characters 50-59
				return -1;
				break;
		}

		#/home/vagrant/haxelib/tink_cli/0,4,1/src/tink/cli/Macro.hx:189: characters 4-26
		return $current - $index;
	}


	/**
	 * @return FutureObject
	 */
	public function promptRequired () {
		#/home/vagrant/haxelib/tink_cli/0,4,1/src/tink/cli/Macro.hx:202: characters 4-63
		return Future_Impl_::async(function ($cb) {
			#/home/vagrant/haxelib/tink_cli/0,4,1/src/tink/cli/Macro.hx:169: characters 12-70
			$cb(Outcome::Success(Noise::Noise()));
		});
	}


	/**
	 * @param \Array_hx $args
	 * 
	 * @return FutureObject
	 */
	public function run_run ($args) {
		#src/App.hx:35: lines 35-77
		if ($args->length < 1) {
			#src/App.hx:35: lines 35-77
			return new SyncFuture(new LazyConst(Outcome::Failure(new TypedError(null, "Insufficient arguments. Expected: " . 1 . ", Got: " . ($args->length??'null'), new HxAnon([
				"fileName" => "App.hx",
				"lineNumber" => 35,
				"className" => "tink.cli.Router0",
				"methodName" => "run_run",
			])))));
		}
		#/home/vagrant/haxelib/tink_cli/0,4,1/src/tink/cli/Macro.hx:461: characters 33-57
		$this->command->run(($args->arr[0] ?? null));
		#/home/vagrant/haxelib/tink_cli/0,4,1/src/tink/cli/Macro.hx:485: characters 12-24
		return Promise_Impl_::ofOutcome(Outcome::Success(Noise::Noise()));
	}
}


Boot::registerClass(Router0::class, 'tink.cli.Router0');
