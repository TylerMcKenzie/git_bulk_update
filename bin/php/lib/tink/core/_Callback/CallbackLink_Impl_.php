<?php
/**
 * Generated by Haxe 3.4.7
 */

namespace tink\core\_Callback;

use \php\_Boot\HxClosure;
use \php\Boot;
use \tink\core\LinkObject;

final class CallbackLink_Impl_ {
	/**
	 * @param \Closure $link
	 * 
	 * @return LinkObject
	 */
	static public function _new ($link) {
		#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Callback.hx:61: character 9
		$this1 = new SimpleLink($link);
		#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Callback.hx:61: character 9
		return $this1;
	}


	/**
	 * @param LinkObject $this
	 * 
	 * @return void
	 */
	static public function cancel ($this1) {
		#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Callback.hx:65: characters 4-35
		if ($this1 !== null) {
			#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Callback.hx:65: characters 22-35
			$this1->cancel();
		}
	}


	/**
	 * @param LinkObject $this
	 * 
	 * @return void
	 */
	static public function dissolve ($this1) {
		#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Callback.hx:69: characters 4-12
		if ($this1 !== null) {
			#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Callback.hx:69: characters 4-12
			$this1->cancel();
		}
	}


	/**
	 * @param \Closure $f
	 * 
	 * @return LinkObject
	 */
	static public function fromFunction ($f) {
		#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Callback.hx:80: characters 11-30
		$this1 = new SimpleLink($f);
		#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Callback.hx:80: characters 11-30
		return $this1;
	}


	/**
	 * @param \Array_hx $callbacks
	 * 
	 * @return LinkObject
	 */
	static public function fromMany ($callbacks) {
		#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Callback.hx:86: characters 11-70
		$this1 = new SimpleLink(function ()  use (&$callbacks) {
			#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Callback.hx:86: characters 36-69
			$_g = 0;
			#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Callback.hx:86: characters 36-69
			while ($_g < $callbacks->length) {
				#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Callback.hx:86: characters 41-43
				$cb = ($callbacks->arr[$_g] ?? null);
				#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Callback.hx:86: characters 36-69
				$_g = $_g + 1;
				#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Callback.hx:86: characters 58-69
				if ($cb !== null) {
					#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Callback.hx:86: characters 58-69
					$cb->cancel();
				}
			}
		});
		#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Callback.hx:86: characters 11-70
		return $this1;
	}


	/**
	 * @param LinkObject $a
	 * @param LinkObject $b
	 * 
	 * @return LinkObject
	 */
	static public function join ($a, $b) {
		#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Callback.hx:83: characters 4-29
		return new LinkPair($a, $b);
	}


	/**
	 * @return void
	 */
	static public function noop () {
	}


	/**
	 * @param LinkObject $this
	 * 
	 * @return \Closure
	 */
	static public function toCallback ($this1) {
		#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Callback.hx:77: characters 4-37
		return function ($_)  use (&$this1) {
			#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Callback.hx:77: characters 24-37
			$this1->cancel();
		};
	}


	/**
	 * @param LinkObject $this
	 * 
	 * @return \Closure
	 */
	static public function toFunction ($this1) {
		#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Callback.hx:74: characters 11-50
		if ($this1 === null) {
			#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Callback.hx:74: characters 29-33
			return new HxClosure(CallbackLink_Impl_::class, 'noop');
		} else {
			#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Callback.hx:74: characters 39-50
			return new HxClosure($this1, 'cancel');
		}
	}
}


Boot::registerClass(CallbackLink_Impl_::class, 'tink.core._Callback.CallbackLink_Impl_');
