<?php
/**
 * Generated by Haxe 3.4.7
 */

namespace tink\core\_Promise;

use \tink\core\FutureTrigger;
use \tink\core\Outcome;
use \php\Boot;
use \tink\core\TypedError;
use \tink\core\_Future\FutureObject;

final class PromiseTrigger_Impl_ {
	/**
	 * @return FutureTrigger
	 */
	static public function _new () {
		#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Promise.hx:343: character 16
		$this1 = new FutureTrigger();
		#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Promise.hx:343: character 16
		return $this1;
	}


	/**
	 * @param FutureTrigger $this
	 * 
	 * @return FutureObject
	 */
	static public function asPromise ($this1) {
		#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Promise.hx:346: characters 53-75
		return $this1;
	}


	/**
	 * @param FutureTrigger $this
	 * @param TypedError $e
	 * 
	 * @return bool
	 */
	static public function reject ($this1, $e) {
		#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Promise.hx:345: characters 41-72
		return $this1->trigger(Outcome::Failure($e));
	}


	/**
	 * @param FutureTrigger $this
	 * @param mixed $v
	 * 
	 * @return bool
	 */
	static public function resolve ($this1, $v) {
		#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Promise.hx:344: characters 38-69
		return $this1->trigger(Outcome::Success($v));
	}
}


Boot::registerClass(PromiseTrigger_Impl_::class, 'tink.core._Promise.PromiseTrigger_Impl_');
