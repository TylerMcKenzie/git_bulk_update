<?php
/**
 * Generated by Haxe 3.4.7
 */

namespace tink\core;

use \php\_Boot\HxClosure;
use \php\Boot;
use \tink\core\_Future\FutureObject;
use \tink\core\_Future\SyncFuture;
use \tink\core\_Future\SimpleFuture;
use \tink\core\_Callback\Callback_Impl_;
use \tink\core\_Lazy\LazyConst;
use \tink\core\_Callback\CallbackList_Impl_;

class FutureTrigger implements FutureObject {
	/**
	 * @var \Array_hx
	 */
	public $list;
	/**
	 * @var mixed
	 */
	public $result;


	/**
	 * @param FutureObject $f
	 * 
	 * @return FutureObject
	 */
	static public function gatherFuture ($f) {
		#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:367: characters 4-18
		$op = null;
		#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:368: lines 368-375
		$this1 = new SimpleFuture(function ($cb)  use (&$op, &$f) {
			#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:369: lines 369-373
			if ($op === null) {
				#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:370: characters 8-32
				$op = new FutureTrigger();
				#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:371: characters 8-28
				$f->handle(new HxClosure($op, 'trigger'));
				#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:372: characters 8-16
				$f = null;
			}
			#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:374: characters 6-26
			return $op->handle($cb);
		});
		#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:368: lines 368-375
		return $this1;
	}


	/**
	 * @return void
	 */
	public function __construct () {
		#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:328: characters 16-34
		$this1 = new \Array_hx();
		#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:328: characters 4-34
		$this->list = $this1;
	}


	/**
	 * @return FutureObject
	 */
	public function asFuture () {
		#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:364: characters 4-15
		return $this;
	}


	/**
	 * @return FutureTrigger
	 */
	public function eager () {
		#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:361: characters 4-15
		return $this;
	}


	/**
	 * @param \Closure $f
	 * 
	 * @return FutureObject
	 */
	public function flatMap ($f) {
		#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:349: characters 18-22
		$_g = $this->list;
		#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:350: lines 350-354
		if ($_g === null) {
			#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:350: characters 17-26
			return $f($this->result);
		} else {
			#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:351: characters 11-12
			$v = $_g;
			#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:352: characters 8-38
			$ret = new FutureTrigger();
			#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:353: characters 8-55
			CallbackList_Impl_::add($this->list, function ($v1)  use (&$f, &$ret) {
				#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:353: characters 30-54
				$f($v1)->handle(new HxClosure($ret, 'trigger'));
			});
			#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:354: characters 8-11
			return $ret;
		}
	}


	/**
	 * @return FutureTrigger
	 */
	public function gather () {
		#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:358: characters 4-15
		return $this;
	}


	/**
	 * @param \Closure $callback
	 * 
	 * @return LinkObject
	 */
	public function handle ($callback) {
		#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:331: characters 18-22
		$_g = $this->list;
		#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:332: lines 332-336
		if ($_g === null) {
			#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:333: characters 8-31
			Callback_Impl_::invoke($callback, $this->result);
			#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:334: characters 8-12
			return null;
		} else {
			#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:335: characters 11-12
			$v = $_g;
			#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:336: characters 8-23
			return CallbackList_Impl_::add($v, $callback);
		}
	}


	/**
	 * @param \Closure $f
	 * 
	 * @return FutureObject
	 */
	public function map ($f) {
		#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:340: characters 18-22
		$_g = $this->list;
		#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:341: lines 341-345
		if ($_g === null) {
			#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:341: characters 17-39
			return new SyncFuture(new LazyConst($f($this->result)));
		} else {
			#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:342: characters 11-12
			$v = $_g;
			#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:343: characters 8-38
			$ret = new FutureTrigger();
			#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:344: characters 8-48
			CallbackList_Impl_::add($this->list, function ($v1)  use (&$f, &$ret) {
				#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:344: characters 42-46
				$tmp = $f($v1);
				#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:344: characters 30-47
				$ret->trigger($tmp);
			});
			#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:345: characters 8-11
			return $ret;
		}
	}


	/**
	 *  Triggers a value for this future
	 * 
	 * @param mixed $result
	 * 
	 * @return bool
	 */
	public function trigger ($result) {
		#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:383: lines 383-391
		if ($this->list === null) {
			#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:383: characters 24-29
			return false;
		} else {
			#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:385: characters 8-29
			$list = $this->list;
			#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:386: characters 8-24
			$this->list = null;
			#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:387: characters 8-28
			$this->result = $result;
			#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:388: characters 8-27
			CallbackList_Impl_::invoke($list, $result);
			#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:389: characters 8-20
			CallbackList_Impl_::clear($list);
			#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:390: characters 8-12
			return true;
		}
	}
}


Boot::registerClass(FutureTrigger::class, 'tink.core.FutureTrigger');
