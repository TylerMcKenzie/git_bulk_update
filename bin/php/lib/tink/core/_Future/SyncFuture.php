<?php
/**
 * Generated by Haxe 3.4.7
 */

namespace tink\core\_Future;

use \php\Boot;
use \tink\core\_Callback\Callback_Impl_;
use \tink\core\LinkObject;
use \tink\core\_Lazy\LazyObject;

class SyncFuture implements FutureObject {
	/**
	 * @var LazyObject
	 */
	public $value;


	/**
	 * @param LazyObject $value
	 * 
	 * @return void
	 */
	public function __construct ($value) {
		#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:236: characters 4-22
		$this->value = $value;
	}


	/**
	 * @return SyncFuture
	 */
	public function eager () {
		#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:253: characters 4-15
		return $this;
	}


	/**
	 * @param \Closure $f
	 * 
	 * @return FutureObject
	 */
	public function flatMap ($f) {
		#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:243: characters 6-27
		$l = $this->value->map($f);
		#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:242: lines 242-245
		return new SimpleFuture(function ($cb)  use (&$l) {
			#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:244: characters 20-45
			return $l->get()->handle($cb);
		});
	}


	/**
	 * @return SyncFuture
	 */
	public function gather () {
		#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:256: characters 4-15
		return $this;
	}


	/**
	 * @param \Closure $cb
	 * 
	 * @return LinkObject
	 */
	public function handle ($cb) {
		#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:248: characters 4-20
		Callback_Impl_::invoke($cb, $this->value->get());
		#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:249: characters 4-15
		return null;
	}


	/**
	 * @param \Closure $f
	 * 
	 * @return FutureObject
	 */
	public function map ($f) {
		#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:239: characters 4-39
		return new SyncFuture($this->value->map($f));
	}
}


Boot::registerClass(SyncFuture::class, 'tink.core._Future.SyncFuture');
