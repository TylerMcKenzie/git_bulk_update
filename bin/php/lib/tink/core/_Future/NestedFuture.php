<?php
/**
 * Generated by Haxe 3.4.7
 */

namespace tink\core\_Future;

use \tink\core\FutureTrigger;
use \php\Boot;
use \tink\core\_Callback\Callback_Impl_;
use \tink\core\LinkObject;

class NestedFuture implements FutureObject {
	/**
	 * @var FutureObject
	 */
	public $gathered;
	/**
	 * @var FutureObject
	 */
	public $outer;


	/**
	 * @param FutureObject $outer
	 * 
	 * @return void
	 */
	public function __construct ($outer) {
		#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:295: characters 4-22
		$this->outer = $outer;
	}


	/**
	 * @return FutureObject
	 */
	public function eager () {
		#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:309: characters 4-23
		$ret = ($this->gathered !== null ? $this->gathered : $this->gathered = FutureTrigger::gatherFuture($this));
		#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:310: characters 4-30
		$ret->handle(Callback_Impl_::fromNiladic(function () {
		}));
		#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:311: characters 4-14
		return $ret;
	}


	/**
	 * @param \Closure $f
	 * 
	 * @return FutureObject
	 */
	public function flatMap ($f) {
		#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:301: characters 11-66
		$ret = $this->outer->flatMap(function ($inner)  use (&$f) {
			#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:301: characters 49-65
			$ret1 = $inner->flatMap($f);
			#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:301: characters 49-65
			return $ret1->gather();
		});
		#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:301: characters 11-66
		return $ret->gather();
	}


	/**
	 * @return FutureObject
	 */
	public function gather () {
		#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:305: lines 305-306
		if ($this->gathered !== null) {
			#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:305: characters 28-36
			return $this->gathered;
		} else {
			#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:306: characters 11-66
			return $this->gathered = FutureTrigger::gatherFuture($this);
		}
	}


	/**
	 * @param \Closure $cb
	 * 
	 * @return LinkObject
	 */
	public function handle ($cb) {
		#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:315: characters 4-19
		$ret = null;
		#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:316: lines 316-318
		$ret = $this->outer->handle(function ($inner)  use (&$ret, &$cb) {
			#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:317: characters 6-61
			$ret = $inner->handle(function ($result)  use (&$cb) {
				#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:317: characters 43-60
				Callback_Impl_::invoke($cb, $result);
			});
		});
		#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:319: characters 4-14
		return $ret;
	}


	/**
	 * @param \Closure $f
	 * 
	 * @return FutureObject
	 */
	public function map ($f) {
		#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:298: characters 11-62
		$ret = $this->outer->flatMap(function ($inner)  use (&$f) {
			#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:298: characters 49-61
			$ret1 = $inner->map($f);
			#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:298: characters 49-61
			return $ret1->gather();
		});
		#/home/vagrant/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:298: characters 11-62
		return $ret->gather();
	}
}


Boot::registerClass(NestedFuture::class, 'tink.core._Future.NestedFuture');
