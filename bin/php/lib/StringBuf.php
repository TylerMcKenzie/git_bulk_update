<?php
/**
 * Generated by Haxe 3.4.7
 */

use \php\Boot;

class StringBuf {
	/**
	 * @var string
	 */
	public $b;


	/**
	 * @return void
	 */
	public function __construct () {
		#/usr/share/haxe/std/php7/_std/StringBuf.hx:32: characters 2-8
		$this->b = "";
	}


	/**
	 * @param mixed $x
	 * 
	 * @return void
	 */
	public function add ($x) {
		#/usr/share/haxe/std/php7/_std/StringBuf.hx:40: lines 40-48
		if ($x === null) {
			#/usr/share/haxe/std/php7/_std/StringBuf.hx:41: characters 3-32
			($this->b .= "null");
		} else if (is_bool($x)) {
			#/usr/share/haxe/std/php7/_std/StringBuf.hx:43: characters 3-58
			($this->b .= ($x ? "true" : "false"));
		} else if (is_string($x)) {
			#/usr/share/haxe/std/php7/_std/StringBuf.hx:45: characters 3-27
			($this->b .= $x);
		} else {
			#/usr/share/haxe/std/php7/_std/StringBuf.hx:47: characters 3-4
			$tmp = $this;
			#/usr/share/haxe/std/php7/_std/StringBuf.hx:47: characters 3-9
			$tmp->b = ($tmp->b??'null') . (\Std::string($x)??'null');
		}
	}
}


Boot::registerClass(StringBuf::class, 'StringBuf');
