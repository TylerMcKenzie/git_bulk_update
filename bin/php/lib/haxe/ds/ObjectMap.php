<?php
/**
 * Generated by Haxe 3.4.7
 */

namespace haxe\ds;

use \haxe\IMap;
use \php\Boot;

/**
 * ObjectMap allows mapping of object keys to arbitrary values.
 * On static targets, the keys are considered to be strong references. Refer
 * to `haxe.ds.WeakMap` for a weak reference version.
 * See `Map` for documentation details.
 * @see https://haxe.org/manual/std-Map.html
 */
class ObjectMap implements IMap {
	/**
	 * @var mixed
	 */
	public $_keys;
	/**
	 * @var mixed
	 */
	public $_values;


	/**
	 * Creates a new ObjectMap.
	 * 
	 * @return void
	 */
	public function __construct () {
		#/usr/share/haxe/std/php7/_std/haxe/ds/ObjectMap.hx:33: characters 10-32
		$this1 = [];
		#/usr/share/haxe/std/php7/_std/haxe/ds/ObjectMap.hx:33: characters 2-32
		$this->_keys = $this1;
		#/usr/share/haxe/std/php7/_std/haxe/ds/ObjectMap.hx:34: characters 12-34
		$this2 = [];
		#/usr/share/haxe/std/php7/_std/haxe/ds/ObjectMap.hx:34: characters 2-34
		$this->_values = $this2;
	}
}


Boot::registerClass(ObjectMap::class, 'haxe.ds.ObjectMap');
