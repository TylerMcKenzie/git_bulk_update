<?php
/**
 * Generated by Haxe 3.4.7
 */

namespace haxe\io;

use \php\Boot;
use \haxe\io\_BytesData\Container;

class BytesBuffer {
	/**
	 * @var string
	 */
	public $b;


	/**
	 * @return void
	 */
	public function __construct () {
		#/usr/share/haxe/std/php7/_std/haxe/io/BytesBuffer.hx:33: characters 2-8
		$this->b = "";
	}


	/**
	 * @return Bytes
	 */
	public function getBytes () {
		#/usr/share/haxe/std/php7/_std/haxe/io/BytesBuffer.hx:81: characters 24-32
		$bytes = strlen($this->b);
		#/usr/share/haxe/std/php7/_std/haxe/io/BytesBuffer.hx:81: characters 2-37
		$bytes1 = new Bytes($bytes, new Container($this->b));
		#/usr/share/haxe/std/php7/_std/haxe/io/BytesBuffer.hx:82: characters 2-10
		$this->b = null;
		#/usr/share/haxe/std/php7/_std/haxe/io/BytesBuffer.hx:83: characters 2-14
		return $bytes1;
	}
}


Boot::registerClass(BytesBuffer::class, 'haxe.io.BytesBuffer');
