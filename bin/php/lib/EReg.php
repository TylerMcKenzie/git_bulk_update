<?php
/**
 * Generated by Haxe 3.4.7
 */

use \php\Boot;
use \php\_Boot\HxString;

final class EReg {
	/**
	 * @var bool
	 */
	public $global;
	/**
	 * @var string
	 */
	public $last;
	/**
	 * @var mixed
	 */
	public $matches;
	/**
	 * @var string
	 */
	public $options;
	/**
	 * @var string
	 */
	public $pattern;
	/**
	 * @var string
	 */
	public $re;


	/**
	 * @param string $r
	 * @param string $opt
	 * 
	 * @return void
	 */
	public function __construct ($r, $opt) {
		#/usr/share/haxe/std/php7/_std/EReg.hx:37: characters 2-18
		$this->pattern = $r;
		#/usr/share/haxe/std/php7/_std/EReg.hx:38: characters 2-25
		$a = HxString::split($opt, "g");
		#/usr/share/haxe/std/php7/_std/EReg.hx:39: characters 2-23
		$this->global = $a->length > 1;
		#/usr/share/haxe/std/php7/_std/EReg.hx:40: lines 40-42
		if ($this->global) {
			#/usr/share/haxe/std/php7/_std/EReg.hx:41: characters 3-19
			$opt = $a->join("");
		}
		#/usr/share/haxe/std/php7/_std/EReg.hx:43: characters 2-20
		$this->options = $opt;
		#/usr/share/haxe/std/php7/_std/EReg.hx:44: characters 2-63
		$this->re = "\"" . (str_replace("\"", "\\\"", $r)??'null') . "\"" . ($opt??'null');
	}


	/**
	 * @param string $s
	 * 
	 * @return bool
	 */
	public function match ($s) {
		#/usr/share/haxe/std/php7/_std/EReg.hx:48: characters 2-77
		$p = preg_match($this->re, $s, $this->matches, PREG_OFFSET_CAPTURE);
		#/usr/share/haxe/std/php7/_std/EReg.hx:50: lines 50-54
		if ($p > 0) {
			#/usr/share/haxe/std/php7/_std/EReg.hx:51: characters 3-11
			$this->last = $s;
		} else {
			#/usr/share/haxe/std/php7/_std/EReg.hx:53: characters 3-14
			$this->last = null;
		}
		#/usr/share/haxe/std/php7/_std/EReg.hx:55: characters 2-14
		return $p > 0;
	}


	/**
	 * @param string $s
	 * @param string $by
	 * 
	 * @return string
	 */
	public function replace ($s, $by) {
		#/usr/share/haxe/std/php7/_std/EReg.hx:103: characters 2-45
		$by = str_replace("\\\$", "\\\\\$", $by);
		#/usr/share/haxe/std/php7/_std/EReg.hx:104: characters 2-42
		$by = str_replace("\$\$", "\\\$", $by);
		#/usr/share/haxe/std/php7/_std/EReg.hx:105: lines 105-107
		if (!preg_match("/\\\\([^?].*?\\\\)/", $this->re)) {
			#/usr/share/haxe/std/php7/_std/EReg.hx:106: characters 3-56
			$by = preg_replace("/\\\$(\\d+)/", "\\\$\\1", $by);
		}
		#/usr/share/haxe/std/php7/_std/EReg.hx:108: characters 2-56
		return preg_replace($this->re, $by, $s, ($this->global ? -1 : 1));
	}
}


Boot::registerClass(EReg::class, 'EReg');
